version: '3.8'
services:
  warp:
    build:
      context: ./warp
      args:
        - WARP_PLUS_KEY=${WARP_PLUS_KEY}
    container_name: warp
    network_mode: "host"
    command: ["warp-cli", "connect"] # Команда, которая будет выполнена при запуске контейнера
    privileged: true
    restart: unless-stopped
  
  xray:
    build:
      context: ./xray
    container_name: xray
    network_mode: "host"
    ports:
      - "443:443"
      - "10085:10085"
    depends_on:
      - warp # xray установится только после запуска warp
    restart: unless-stopped

  # Сервис для Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"  # Порт для интерфейса Prometheus
    restart: unless-stopped
    network_mode: host

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD} # Устанавливаем пароль для admin
    ports:
      - "3000:3000"  # Порт, по которому будет доступна Grafana
    volumes:
      - grafana-data:/var/lib/grafana  # Персистентность данных Grafana
    depends_on:
      - prometheus
    network_mode: host
    restart: unless-stopped

  # Сервис для Node Exporter (мониторинг хоста)
  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"  # Порт для метрик с хостовой машины
    restart: unless-stopped
    network_mode: host  # Для доступа к меткам хоста

  # Сервис для cAdvisor (мониторинг Docker контейнеров)
  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"  # Порт для метрик контейнеров
    restart: unless-stopped
    network_mode: host  # Для доступа к Docker контейнерам

volumes:
  prometheus_data:
    driver: local
